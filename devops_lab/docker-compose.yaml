version: "3.9"

services:
  sonarqube:
    image: sonarqube:latest # cambia la etiqueta si quieres fijar versi√≥n
    container_name: sonarqube
    ports:
      - "9000:9000"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_logs:/opt/sonarqube/logs
      - sonarqube_extensions:/opt/sonarqube/extensions
    restart: unless-stopped
    networks:
      - devops

  artifactory:
    image: releases-docker.jfrog.io/jfrog/artifactory-oss:latest
    container_name: artifactory
    ports:
      - "8081:8081"
      - "8082:8082"
    volumes:
      - "./artifactory:/var/opt/jfrog/artifactory"
    user: "1030:1030"
    restart: unless-stopped
    networks:
      - devops

  jenkins:
    image: myjenkins-blueocean:2.504.2-1 # tu imagen personalizada
    container_name: jenkins-blueocean
    environment:
      DOCKER_HOST: tcp://docker:2376
      DOCKER_CERT_PATH: /certs/client
      DOCKER_TLS_VERIFY: "1"
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro
    restart: on-failure
    networks:
      - devops

  postgres:
    image: postgres:latest # servicio de base de datos
    container_name: postgres
    environment:
      POSTGRES_USER: artifactory
      POSTGRES_PASSWORD: password
      POSTGRES_DB: artifactorydb
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - devops

networks:
  devops:
    driver: bridge

volumes:
  sonarqube_data:
  sonarqube_logs:
  sonarqube_extensions:
  jenkins-data:
  jenkins-docker-certs:
  postgres-data:
